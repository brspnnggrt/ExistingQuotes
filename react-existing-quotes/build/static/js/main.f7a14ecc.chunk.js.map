{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMessageReceived","event","data","taskId","state","taskIdRequestData","update","taskIdRunAction","requestData","window","parent","postMessage","iframe","id","query","api","function","arguments","tabId","Columns","Skip","Take","OrderBy","UsePaging","LoadDelegatedApproversQuotes","TabId","response","status","runAction","actionId","rowData","cryptedOwnerId","cryptedCartId","approverId","getInitData","find","r","getData","visibleColumns","VisibilityRules","rows","Rows","newColumns","length","map","col","title","vrLabel","field","vrColumnName","columns","newData","row","mappedEntries","entries","Data","filter","_ref","_ref2","slicedToArray","k","nc","includes","_ref3","_ref4","Value","push","CryptedOwnerId","CryptedQuoteId","ApproverId","fromEntries","setState","loading","concat","addEventListener","_this2","react_default","a","createElement","className","src","logo","alt","dist_default","onChangeRowsPerPage","actions","icon","tooltip","onClick","Component","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f7a14ecc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nimport React, { Component }  from 'react';\nimport MaterialTable from 'material-table'\n\n/*\n\nUsage: \n<iframe id='react-existing-quotes' src=\"https://brspnnggrt.github.io/ExistingQuotes/react-existing-quotes/build/\" style=\"width: 100%; border: 0px; height: 700px;\"></iframe>\n<script src='https://brspnnggrt.github.io/ExistingQuotes/react-existing-quotes/build/jsom.js'></script>\n\n*/\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        const id = 'react-existing-quotes';\n        this.state = {\n            loading: true,\n            id: id,\n            taskIdRequestData: `${id}-requestData`,\n            taskIdRunAction: `${id}-runAction`,\n            columns: [],\n            data: []\n        };\n        window.addEventListener(\"message\", this.onMessageReceived, false);\n        this.requestData();\n    }\n\n    onMessageReceived = event => {\n        if (event.data.taskId === this.state.taskIdRequestData) this.update(event);\n        if (event.data.taskId === this.state.taskIdRunAction) this.requestData();\n    };\n\n    requestData = () => {\n        window.parent.postMessage({\n            iframe: this.state.id,\n            taskId: this.state.taskIdRequestData,\n            query: [{\n                api: 'quoteList',\n                function: 'getInitData',\n                arguments: [{\n                    'tabId': '0'\n                }]\n            },{\n                api: 'quoteList',\n                function: 'getData',\n                arguments: [{\n                    'Columns': ['SYSTEM_QUOTATION_NUMBER', 'CUSTOMER_COMPANY', 'USER_NAME', 'DATE_CREATED', 'cf_Terms',\n                                'REVISION_ID', 'cf_QuoteExpirationDate', 'TOTALAMOUNT', 'Status'],\n                    'Skip': 0,\n                    'Take': 11,\n                    'OrderBy': ['id', 'desc'],\n                    'UsePaging': true,\n                    'LoadDelegatedApproversQuotes': false,\n                    'TabId': 1\n                }]\n            }],\n            response: [],\n            status: 'request'\n        }, \"https://sandbox.webcomcpq.com/\");\n    };\n\n    runAction = (actionId, rowData) => {\n        window.parent.postMessage({\n            iframe: this.state.id,\n            taskId: this.state.taskIdRunAction,\n            query: [{\n                api: 'quoteList',\n                function: 'executeAction',\n                arguments: [{\n                    actionId: actionId,\n                    cryptedOwnerId: rowData.cryptedOwnerId,\n                    cryptedCartId: rowData.cryptedCartId,\n                    approverId: rowData.approverId\n                }]\n            }],\n            response: [],\n            status: 'request'\n        }, \"https://sandbox.webcomcpq.com/\");\n    };\n\n    update = (event) => {\n        // prepare data\n        let getInitData = event.data.response.find(r => r.api === 'quoteList' && r.function === 'getInitData');\n        let getData = event.data.response.find(r => r.api === 'quoteList' && r.function === 'getData');\n        let visibleColumns = getInitData.data.VisibilityRules;\n        let rows = getData.data.Rows;\n\n        // transform data\n        let mapColumns = c => c.map(col => { return { title: col.vrLabel, field: col.vrColumnName }; });\n        let newColumns = visibleColumns.length ? mapColumns(visibleColumns) : this.state.columns;\n        let mapRowsToData = r => r.map(row => {\n            let filteredEntries = Object.entries(row.Data).filter(([k, v]) => newColumns.map(nc => nc.field).includes(k));\n            let mappedEntries = filteredEntries.map(([k, v]) => [k, v.Value]);\n            mappedEntries.push(['cryptedOwnerId', row.CryptedOwnerId]);\n            mappedEntries.push(['cryptedCartId', row.CryptedQuoteId]);\n            mappedEntries.push(['approverId', row.ApproverId]);\n            return Object.fromEntries(mappedEntries);\n        });\n        let newData = rows.length ? mapRowsToData(rows) : this.state.data;\n\n        // update state if data available\n        this.setState({\n            loading: false,\n            columns: newColumns,\n            data: newData\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"n-8 App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n                <MaterialTable\n                    onChangeRowsPerPage\n                    columns={this.state.columns}\n                    data={this.state.data}\n                    title=\"Existing Quotes\"\n                    actions={[{ icon: \"delete\", tooltip: \"Delete quote\", onClick: (event, rowData) => this.runAction(2, rowData) },\n                              { icon: \"content_copy\", tooltip: \"Copy quote\", onClick: (event, rowData) => this.runAction(4, rowData) }]}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}