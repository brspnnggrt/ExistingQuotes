{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","update","event","getInitData","data","response","find","r","api","function","getData","visibleColumns","VisibilityRules","rows","Rows","newColumns","length","map","col","title","vrLabel","field","vrColumnName","state","columns","newData","row","mappedEntries","entries","Data","filter","_ref","_ref2","slicedToArray","k","nc","includes","_ref3","_ref4","Value","push","CryptedOwnerId","CryptedQuoteId","ApproverId","fromEntries","setState","loading","type","lookup","34","63","name","surname","birthYear","birthCity","onMessageReceivedOld","console","log","keys","cells","slice","t","columnName","values","value","_","i","onMessageReceived","taskId","runAction","actionId","rowData","window","parent","postMessage","iframe","queries","arguments","cryptedOwnerId","cryptedCartId","approverId","status","addEventListener","query","tabId","Columns","Skip","Take","OrderBy","UsePaging","LoadDelegatedApproversQuotes","TabId","_this2","react_default","a","createElement","className","src","logo","alt","dist_default","actions","icon","tooltip","onClick","Component","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.50182c98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nimport React, { Component }  from 'react';\nimport MaterialTable from 'material-table'\n// import { v4 as uuidv4 } from 'uuid';\n\n/*\n\n\n<iframe src=\"https://brspnnggrt.github.io/ExistingQuotes/react-existing-quotes/build/index.html\" onload=\"initializeFrame()\"></iframe>\n\n<script>\n\ninitializeFrame = () => {\n\n  let data = JSON.parse(ko.toJSON(cpq.models.cartList.mainGrid));\n  iframe.contentWindow.postMessage(data, \"https://brspnnggrt.github.io/\");\n  window.addEventListener(\"message\", m => eval(m.data[\"execute\"] + \"()\"));\n\n}\n\n</script>\n\n*/\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            columns: [\n                { title: 'Adı', field: 'name' },\n                { title: 'Soyadı', field: 'surname' },\n                { title: 'Doğum Yılı', field: 'birthYear', type: 'numeric' },\n                { title: 'Doğum Yeri', field: 'birthCity', lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' } }\n            ],\n            data: [{ name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 }]\n        };\n        this.onMessageReceivedOld = event => { /* quote 1.0 cartlist */\n            console.log(event.data);\n            this.setState({\n                loading: false,\n                columns: event.data.columns.length ? event.data.columns.map(col => { return { title: col.title, field: col.name }; }) : this.state.columns,\n                data: event.data.rows.length ? event.data.rows.map(row => {\n                    let keys = row.cells.slice(1).map(t => t.columnName);\n                    let values = row.cells.slice(1).map(t => t.value);\n                    let data = Object.fromEntries(keys.map((_, i) => [keys[i], values[i]]));\n                    return data;\n                }) : this.state.data\n            });\n        };\n        this.onMessageReceived = event => { /* quote 2.0 quotelist */\n            console.log(event.data);\n\n            if (event.data.taskId === 'react-existing-quotes-query') this.update(event);\n        };\n        this.runAction = (actionId, rowData) => {\n            window.parent.postMessage({\n                iframe: 'react-existing-quotes',\n                taskId: 'react-existing-quotes-executeaction',\n                queries: [{\n                    api: 'quoteList',\n                    function: 'executeAction',\n                    arguments: [{\n                        actionId: actionId,\n                        cryptedOwnerId: rowData.cryptedOwnerId,\n                        cryptedCartId: rowData.cryptedCartId,\n                        approverId: rowData.approverId\n                    }]\n                }],\n                data: [],\n                status: 'request'\n            }, \"https://sandbox.webcomcpq.com/\");\n        };\n        window.addEventListener(\"message\", this.onMessageReceived, false);\n        window.parent.postMessage({\n            iframe: 'react-existing-quotes',\n            taskId: 'react-existing-quotes-query',\n            query: [{\n                api: 'quoteList',\n                function: 'getInitData',\n                arguments: [{\n                    'tabId': '0'\n                }]\n            },{\n                api: 'quoteList',\n                function: 'getData',\n                arguments: [{\n                    'Columns': ['SYSTEM_QUOTATION_NUMBER', 'CUSTOMER_COMPANY', 'USER_NAME', 'DATE_CREATED', 'cf_Terms',\n                                'REVISION_ID', 'cf_QuoteExpirationDate', 'TOTALAMOUNT', 'Status'],\n                    'Skip': 0,\n                    'Take': 11,\n                    'OrderBy': ['id', 'desc'],\n                    'UsePaging': true,\n                    'LoadDelegatedApproversQuotes': false,\n                    'TabId': 1\n                }]\n            }],\n            response: [],\n            status: 'request'\n        }, \"https://sandbox.webcomcpq.com/\");\n    }\n\n    update = (event) => {\n        // prepare data\n        let getInitData = event.data.response.find(r => r.api === 'quoteList' && r.function === 'getInitData');\n        let getData = event.data.response.find(r => r.api === 'quoteList' && r.function === 'getData');\n        let visibleColumns = getInitData.data.VisibilityRules;\n        let rows = getData.data.Rows;\n\n        // transform data\n        let mapColumns = c => c.map(col => { return { title: col.vrLabel, field: col.vrColumnName }; });\n        let newColumns = visibleColumns.length ? mapColumns(visibleColumns) : this.state.columns;\n        let mapRowsToData = r => r.map(row => {\n            let filteredEntries = Object.entries(row.Data).filter(([k, v]) => newColumns.map(nc => nc.field).includes(k));\n            let mappedEntries = filteredEntries.map(([k, v]) => [k, v.Value]);\n            mappedEntries.push(['cryptedOwnerId', row.CryptedOwnerId]);\n            mappedEntries.push(['cryptedCartId', row.CryptedQuoteId]);\n            mappedEntries.push(['approverId', row.ApproverId]);\n            return Object.fromEntries(mappedEntries);\n        });\n        let newData = rows.length ? mapRowsToData(rows) : this.state.data;\n\n        // update state if data available\n        this.setState({\n            loading: false,\n            columns: newColumns,\n            data: newData\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                </header>\n                <MaterialTable\n                    columns={this.state.columns}\n                    data={this.state.data}\n                    title=\"Existing Quotes\"\n                    actions={[{ icon: \"delete\", tooltip: \"Delete quote\", onClick: (event, rowData) => this.runAction(2, rowData) },\n                    { icon: \"content_copy\", tooltip: \"Copy quote\", onClick: (event, rowData) => this.runAction(4, rowData) }]}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}